paths:
  /api/carts:
    get:
      summary: Returns the cart corresponding to the authenticated user.
      tags:
        - Carts
      parameters:
        - email: string
          in: req
          required: true
          description: Mail from req.user.
          schema:
            $type: String
      responses:
        "200":
          description: Returns the cart 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.
    post:
      summary: Creates a new cart corresponding to the authenticated user.
      tags:
        - Carts
      parameters:
        - email: string
          in: req
          required: true
          description: Mail from req.user.
          schema:
            $type: String
      responses:
        "200":
          description: Returns the newly created cart.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.
    put:
      summary: Adds an array of products to the cart corresponding to the authenticated user.
      tags:
        - Carts
      parameters:
        - email: string
          in: req
          required: true
          description: Mail from req.user.
          schema:
            $type: String
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/addCartProducts'
      responses:
        "200":
          description: Returns the cart with the array of products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.
    delete:
      summary: Deletes the cart corresponding to the authenticated user.
      tags:
        - Carts
      parameters:
        - email: string
          in: req
          required: true
          description: Mail from req.user.
          schema:
            $type: String
      responses:
        "200":
          description: Returns success if the cart was correctly deleted. 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.
  /api/carts/all:
    get:
      summary: Returns all the carts in the DataBase.
      tags:
        - Carts
      parameters:
        - limit: number
          in: req
          description: Optional parameter needed to paginate the results.
          schema:
            $type: Number
        - page: number
          in: req
          description: Optional parameter needed to paginate the results.
          schema:
            $type: Number
      responses:
        "200":
          description: Returns every cart in the database 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/AllCarts'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.
  /api/carts/addProduct:
    put:
      summary: Adds a single product to the cart of the authenticated user.
      tags:
        - Carts
      parameters:
        - email: string
          in: req
          required: true
          description: Mail from req.user.
          schema:
            $type: String
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/addCartProduct'
      responses:
        "200":
          description: Returns the cart with the newly added product. 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.
  /api/carts/deleteProduct:
    delete:
      summary: Deletes a single product from the cart of the authenticated user.
      tags:
        - Carts
      parameters:
        - email: string
          in: req
          required: true
          description: Mail from req.user.
          schema:
            $type: String
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/deleteCartProduct'
      responses:
        "200":
          description: Returns the cart of the authenticated user. 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "401":
          description: User tried to access to unauthorized resources.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.
  /api/carts/purchase:
    post:
      summary: Saves the current cart and its products info into a ticket. Discounts quantity from the stock of each product. Returns unavailable products at purchase time.
      tags:
        - Carts
      parameters:
        - email: string
          in: req
          required: true
          description: Mail from req.user.
          schema:
            $type: String
      responses:
        "200":
          description: Returns the unavailable products of the cart of the authenticated user. 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Incomplete Values Error, generated when expected user input is not provided.
        "401":
          description: User tried to access to unauthorized resources.
        "404":
          description: Not Found Error, generated when there is no cart associated to the user mail.
        "500":
          description: Unhandled Error, generated when something unexpected happened.
        "503":
          description: Internal Server Error, usually generated by a defective query or connection issue.

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID autogenerated by MongoDB.
        purchaser:
          type: string
          description: Email from cart owner.
        products:
          type: array
          items:
            type: object
            properties:
              pid:
                type: ObjectId
                description: Product ID (pid) as a MongoDB ObjectId.
              quantity:
                type: number
                description: Quantity of the product.
          description: Products array containing Product ID (pid, String) and quantity (number).
      example:
        _id: ObjectId("mongodbuid")
        purchaser: user@user.com
        products:
          - pid: ObjectId("mongodbuid1"),
            quantity: 12
          - pid: ObjectId("mongodbuid2"),
            quantity: 10
          - pid: ObjectId("mongodbuid3"),
            quantity: 2
    AllCarts:
      type: object
      properties:
        carts:
          type: array
          items:
            type: object
            properties:
              _id:
                type: ObjectId
                description: ID autogenerated by MongoDB.
              purchaser:
                type: string
                description: Email from cart owner.
              products:
                type: array
                items:
                  type: object
                  properties:
                    pid:
                      type: ObjectId
                      description: Product ID (pid) as a MongoDB ObjectId.
                    quantity:
                      type: number
                      description: Quantity of the product.
                description: Products array containing Product ID (pid, String) and quantity (number).
          description: Array of every Cart in the DataBase.
      example:
        carts:
          - _id: ObjectId("mongodbuida")
            purchaser: usera@user.com
            products:
              - pid: ObjectId("mongodbuid1a")
                quantity: 12
              - pid: ObjectId("mongodbuid2a")
                quantity: 10
              - pid: ObjectId("mongodbuid3a")
                quantity: 2
          - _id: ObjectId("mongodbuidb")
            purchaser: userb@user.com
            products:
              - pid: ObjectId("mongodbuid1b")
                quantity: 12
              - pid: ObjectId("mongodbuid2b")
                quantity: 10
              - pid: ObjectId("mongodbuid3b")
                quantity: 2
          - _id: ObjectId("mongodbuidc")
            purchaser: userc@user.com
            products:
              - pid: ObjectId("mongodbuid1c")
                quantity: 12
              - pid: ObjectId("mongodbuid2c")
                quantity: 10
              - pid: ObjectId("mongodbuid3c")
                quantity: 2
  requestBodies:
    addCartProducts:
      products:
        type: array
        items:
          type: object
          properties:
            pid:
              type: ObjectId
              description: Product ID (pid) as a MongoDB ObjectId.
            quantity:
              type: number
              description: Quantity of the product.
        description: Products array containing Product ID (pid, String) and quantity (number).
      example:
        products:
          - pid: ObjectId("mongodbuid1"),
            quantity: 12
          - pid: ObjectId("mongodbuid2"),
            quantity: 10
          - pid: ObjectId("mongodbuid3"),
            quantity: 2
    addCartProduct:
      type: object
      properties:
        pid:
          type: ObjectId
          description: Product ID (pid) as a MongoDB ObjectId.
        quantity:
          type: number
          description: Quantity of the product.
      description: Instance of product to save in the cart.
    deleteCartProduct:
      type: object
      properties:
        pid:
          type: ObjectId
          description: Product ID (pid) as a MongoDB ObjectId.
      description: Instance of product to delete from the cart.